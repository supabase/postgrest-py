name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
  contents: write # needed for github actions bot to write to repo
  pull-requests: write

jobs:
  publish:
    runs-on: ubuntu-latest
    name: "Bump version, create changelog and publish"
    environment:
      name: pypi
      url: https://pypi.org/p/postgrest
    steps:
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.3

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          target-branch: ${{ github.ref_name }}

      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created == 'true' || steps.release.outputs.prs_created == 'true' }}
        with:
          fetch-depth: 0

      - if: ${{ steps.release.outputs }}
        id: versions
        run: |
          set -ex

          RELEASE_CANDIDATE=true
          NOT_RELEASE_CANDIDATE='${{ steps.release.outputs.release_created }}'
          if [ "$NOT_RELEASE_CANDIDATE" == "true" ]
          then
            RELEASE_CANDIDATE=false
          fi

          MAIN_RELEASE_VERSION=x
          RELEASE_VERSION=y

          if [ "$RELEASE_CANDIDATE" == "true" ]
          then
            # Release please doesn't tell you the candidate version when it
            # creates the PR, so we have to take it from the title.
            MAIN_RELEASE_VERSION=$(node -e "console.log('${{ steps.release.outputs.pr && fromJSON(steps.release.outputs.pr).title }}'.split(' ').reverse().find(x => x.match(/[0-9]+[.][0-9]+[.][0-9]+/)))")

            # Use git describe tags to identify the number of commits the branch
            # is ahead of the most recent non-release-candidate tag, which is
            # part of the rc.<commits> value.
            RELEASE_VERSION=$MAIN_RELEASE_VERSION-rc.$(node -e "console.log('$(git describe --tags --exclude rc*)'.split('-')[1])")

            # release-please only ignores releases that have a form like [A-Z0-9]<version>, so prefixing with rc<version>
            RELEASE_NAME="rc$RELEASE_VERSION"
          else
            MAIN_RELEASE_VERSION=${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
            RELEASE_VERSION="$MAIN_RELEASE_VERSION"
            RELEASE_NAME="v$RELEASE_VERSION"
          fi

          echo "MAIN_RELEASE_VERSION=${MAIN_RELEASE_VERSION}" >> "${GITHUB_ENV}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> "${GITHUB_ENV}"
          echo "RELEASE_CANDIDATE=${RELEASE_CANDIDATE}" >> "${GITHUB_ENV}"
          echo "RELEASE_NAME=${RELEASE_NAME}" >> "${GITHUB_ENV}"

          echo "MAIN_RELEASE_VERSION=${MAIN_RELEASE_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "RELEASE_CANDIDATE=${RELEASE_CANDIDATE}" >> "${GITHUB_OUTPUT}"
          echo "RELEASE_NAME=${RELEASE_NAME}" >> "${GITHUB_OUTPUT}"

      - name: Install dependencies
        run: poetry install

      - name: Build package distribution directory
        id: build_dist
        run: poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
        # See https://github.com/actions/runner/issues/1173
        if: ${{ steps.release.outputs.release_created == 'true' || steps.release.outputs.prs_created == 'true' }}
